import jwt from "jsonwebtoken";
import dotenv from 'dotenv';

// ‡πÇ‡∏´‡∏•‡∏î environment variables ‡∏à‡∏≤‡∏Å‡πÑ‡∏ü‡∏•‡πå .env
dotenv.config();

const AYOKEYs = process.env.SECRET_KEY;

const protect = (req, res, next) => {
    const token = req.headers.authorization && req.headers.authorization.split(' ')[1];

    if (!token) {
        return res.status(401).json({ message: "No token provided, authorization denied" });
    }

    try {
        const decoded = jwt.verify(token, AYOKEYs);
        req.user = decoded;
        next();
    } catch (error) {
        console.error(error);
        res.status(401).json({ message: "Token is not valid" });
    }
};
export default protect;







// üê® Todo: Exercise #5
// ‡∏™‡∏£‡πâ‡∏≤‡∏á Middleware ‡∏Ç‡∏∂‡πâ‡∏ô‡∏°‡∏≤ 1 ‡∏≠‡∏±‡∏ô‡∏ä‡∏∑‡πà‡∏≠ Function ‡∏ß‡πà‡∏≤ `protect`
// ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÄ‡∏≠‡∏≤‡πÑ‡∏ß‡πâ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤ Client ‡πÅ‡∏ô‡∏ö Token ‡∏°‡∏≤‡πÉ‡∏ô Header ‡∏Ç‡∏≠‡∏á Request ‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà
